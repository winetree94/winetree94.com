---
import BaseHead from '../components/BaseHead.astro';
import Footer from '../components/Footer.astro';
import Header from '../components/Header.astro';
import IndentLine from '../components/IndentLine.astro';
import TechBadge from '../components/TechBadge.astro';
import { SITE_DESCRIPTION, SITE_TITLE } from '../consts';
import { getCurrentLangCode, getLangBasePath } from '../i18n/utils';
import { useTranslation } from '../i18n/utils';

const langCode = getCurrentLangCode(Astro.url);
const t = useTranslation(langCode);
const langPath = getLangBasePath(Astro.url);

const links = [
  {
    name: 'Github',
    url: 'https://github.com/winetree94',
  },
  {
    name: 'NPM',
    url: 'https://www.npmjs.com/~winetree94',
  },
  {
    name: 'Docker Hub',
    url: 'https://hub.docker.com/u/winetree94',
  },
  {
    name: 'LinkedIn',
    url: 'https://www.linkedin.com/in/hansol-park-995380265/',
  },
  {
    name: 'Reddit',
    url: 'https://www.reddit.com/user/No_Fail_5663/',
  },
  {
    name: 'Blog (Old)',
    url: 'https://winetree94.notion.site',
  },
];

const experience: {
  companyName: string;
  country: string;
  main: string;
  position: string;
  period: string;
  projects: {
    title: string;
    description: string;
    period: string;
    goals: string[];
  }[];
}[] = [
  {
    companyName: t('about.experience.swit.title'),
    main: t('about.experience.swit.main'),
    country: t('about.experience.swit.country'),
    position: t('about.experience.swit.roll'),
    period: t('about.experience.swit.period'),
    projects: [
      {
        title: t('about.experience.swit.features.editor.title'),
        period: t('about.experience.swit.features.editor.period'),
        description: t('about.experience.swit.features.editor.description'),
        goals: [
          t('about.experience.swit.features.editor.rolls.1'),
          t('about.experience.swit.features.editor.rolls.2'),
          t('about.experience.swit.features.editor.rolls.3'),
          t('about.experience.swit.features.editor.rolls.4'),
          t('about.experience.swit.features.editor.rolls.5'),
        ],
      },
      {
        title: t('about.experience.swit.features.auth.title'),
        period: t('about.experience.swit.features.auth.period'),
        description: t('about.experience.swit.features.auth.description'),
        goals: [
          t('about.experience.swit.features.auth.rolls.1'),
          t('about.experience.swit.features.auth.rolls.2'),
          t('about.experience.swit.features.auth.rolls.3'),
          t('about.experience.swit.features.auth.rolls.4'),
        ],
      },
      {
        title: t('about.experience.swit.features.language.title'),
        period: t('about.experience.swit.features.language.period'),
        description: t('about.experience.swit.features.language.description'),
        goals: [
          t('about.experience.swit.features.language.rolls.1'),
          t('about.experience.swit.features.language.rolls.2'),
        ],
      },
      {
        title: t('about.experience.swit.features.design_system.title'),
        period: t('about.experience.swit.features.design_system.period'),
        description: t('about.experience.swit.features.design_system.description'),
        goals: [
          t('about.experience.swit.features.design_system.rolls.1'),
          t('about.experience.swit.features.design_system.rolls.2'),
          t('about.experience.swit.features.design_system.rolls.3'),
        ],
      },
      {
        title: t('about.experience.swit.features.task.title'),
        period: t('about.experience.swit.features.task.period'),
        description: t('about.experience.swit.features.task.description'),
        goals: [
          t('about.experience.swit.features.task.rolls.1'),
          t('about.experience.swit.features.task.rolls.2'),
          t('about.experience.swit.features.task.rolls.3'),
        ],
      },
    ],
  },
  {
    companyName: t('about.experience.epapyrus.title'),
    country: t('about.experience.epapyrus.country'),
    position: t('about.experience.epapyrus.roll'),
    main: t('about.experience.epapyrus.main'),
    period: t('about.experience.epapyrus.period'),
    projects: [
      {
        title: t('about.experience.epapyrus.features.pen.title'),
        period: t('about.experience.epapyrus.features.pen.period'),
        description: t('about.experience.epapyrus.features.pen.description'),
        goals: [
          t('about.experience.epapyrus.features.pen.rolls.1'),
          t('about.experience.epapyrus.features.pen.rolls.2'),
        ],
      },
      {
        title: t('about.experience.epapyrus.features.pki.title'),
        period: t('about.experience.epapyrus.features.pki.period'),
        description: t('about.experience.epapyrus.features.pki.description'),
        goals: [
          t('about.experience.epapyrus.features.pki.rolls.1'),
          t('about.experience.epapyrus.features.pki.rolls.2'),
        ],
      },
    ],
  },
  {
    companyName: t('about.experience.playauto.title'),
    country: t('about.experience.playauto.country'),
    position: t('about.experience.playauto.roll'),
    main: t('about.experience.playauto.main'),
    period: t('about.experience.playauto.period'),
    projects: [
      {
        title: t('about.experience.playauto.features.multi_framework.title'),
        period: t('about.experience.playauto.features.multi_framework.period'),
        description: t('about.experience.playauto.features.multi_framework.description'),
        goals: [
          t('about.experience.playauto.features.multi_framework.rolls.1'),
          t('about.experience.playauto.features.multi_framework.rolls.2'),
        ],
      },
      {
        title: t('about.experience.playauto.features.datatable.title'),
        period: t('about.experience.playauto.features.datatable.period'),
        description: t('about.experience.playauto.features.datatable.description'),
        goals: [
          t('about.experience.playauto.features.datatable.rolls.1'),
          t('about.experience.playauto.features.datatable.rolls.2'),
        ],
      },
      {
        title: t('about.experience.playauto.features.pa_global.title'),
        period: t('about.experience.playauto.features.pa_global.period'),
        description: t('about.experience.playauto.features.pa_global.description'),
        goals: [
          t('about.experience.playauto.features.pa_global.rolls.1'),
          t('about.experience.playauto.features.pa_global.rolls.2'),
        ],
      },
    ],
  },
  {
    companyName: t('about.experience.jdlab.title'),
    country: t('about.experience.jdlab.country'),
    position: t('about.experience.jdlab.roll'),
    main: t('about.experience.jdlab.main'),
    period: t('about.experience.jdlab.period'),
    projects: [
      {
        title: t('about.experience.jdlab.features.exim.title'),
        period: t('about.experience.jdlab.features.exim.period'),
        description: t('about.experience.jdlab.features.exim.description'),
        goals: [t('about.experience.jdlab.features.exim.rolls.1'), t('about.experience.jdlab.features.exim.rolls.2')],
      },
      {
        title: t('about.experience.jdlab.features.bupasa.title'),
        period: t('about.experience.jdlab.features.bupasa.period'),
        description: t('about.experience.jdlab.features.bupasa.description'),
        goals: [
          t('about.experience.jdlab.features.bupasa.rolls.1'),
          t('about.experience.jdlab.features.bupasa.rolls.2'),
        ],
      },
    ],
  },
];

const opensourceExperience: {
  projectName: string;
  description: string;
  period: string;
  features: string[];
  publicLink: string;
  internalLink: string;
}[] = [
  {
    projectName: t('about.open_source.edybara.title'),
    description: t('about.open_source.edybara.description'),
    period: t('about.open_source.edybara.period'),
    features: [
      t('about.open_source.edybara.features.1'),
      t('about.open_source.edybara.features.2'),
      t('about.open_source.edybara.features.3'),
    ],
    publicLink: t('about.open_source.edybara.link'),
    internalLink: '/projects/edybara',
  },
  {
    projectName: t('about.open_source.qdocs.title'),
    description: t('about.open_source.qdocs.description'),
    period: t('about.open_source.qdocs.period'),
    features: [t('about.open_source.qdocs.features.1'), t('about.open_source.qdocs.features.2')],
    publicLink: t('about.open_source.qdocs.link'),
    internalLink: '/projects/qdocs',
  },
  {
    projectName: t('about.open_source.vector_optimizer.title'),
    description: t('about.open_source.vector_optimizer.description'),
    period: t('about.open_source.vector_optimizer.period'),
    features: [t('about.open_source.vector_optimizer.features.1'), t('about.open_source.vector_optimizer.features.2')],
    publicLink: t('about.open_source.vector_optimizer.link'),
    internalLink: '/projects/vector-optimizer',
  },
  {
    projectName: t('about.open_source.vanilla_recycler_view.title'),
    description: t('about.open_source.vanilla_recycler_view.description'),
    period: t('about.open_source.vanilla_recycler_view.period'),
    features: [
      t('about.open_source.vanilla_recycler_view.features.1'),
      t('about.open_source.vanilla_recycler_view.features.2'),
    ],
    publicLink: t('about.open_source.vanilla_recycler_view.link'),
    internalLink: '/projects/vanilla-recycler-view',
  },
];
---

<html lang={langCode}>
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
  </head>
  <body>
    <Header />
    <main>
      <div class="tw-flex tw-flex-col sm:tw-flex-row">
        <div class="tw-flex-shrink-0 tw-flex tw-justify-center">
          <img
            class="tw-rounded-full profile-image tw-max-w-[200px] tw-min-w-[200px] tw-min-h-[200px] tw-max-h-[200px]"
            src="/photos/profile.jpg"
            alt="Profile Image"
          />
        </div>
        <div class="tw-flex tw-flex-col sm:tw-ml-8 tw-mt-8 sm:tw-mt-0">
          <h5>{t("about.title")}</h5>
          <p class="tw-mt-4">
            <Fragment set:html={t("about.description")} />
            <br />
            {t("about.contact_me")}
          </p>
          {
            langCode === "ko" && (
              <p class="tw-text-right tw-mt-4">
                <a href={`${langPath}/resume`}>{t("about.profile.need-pdf")}</a>
              </p>
            )
          }
        </div>
      </div>
      <div class="tw-flex tw-flex-col tw-mt-8">
        <h4>{t("about.jump_to")}</h4>
        <div
          class="tw-mt-4 tw-flex tw-justify-center tw-gap-2 tw-flex-col sm:tw-flex-row sm:tw-gap-4"
        >
          <a id="jump_to_profile" class="tw-cursor-pointer">
            {t("about.profile")}
          </a>
          <a id="jump_to_qualifications" class="tw-cursor-pointer">
            {t("about.qualifications")}
          </a>
          <a id="jump_to_experience" class="tw-cursor-pointer">
            {t("about.experience")}
          </a>
          <a id="jump_to_open_source" class="tw-cursor-pointer">
            {t("about.open_source")}
          </a>
        </div>
      </div>
      <div class="tw-flex tw-flex-col tw-mt-8">
        <h4 id="profile">{t("about.profile")}</h4>
        <IndentLine>
          <p>
            {t("about.profile.description")}
          </p>
          <ul class="tw-list-disc tw-list-inside tw-mt-4">
            {
              links.map((link) => (
                <li class="tw-list-outside tw-ml-6">
                  <a href={link.url} target="_blank">
                    {link.name}
                  </a>
                </li>
              ))
            }
          </ul>
        </IndentLine>
      </div>
      <div class="tw-flex tw-flex-col tw-mt-8">
        <h3 id="qualifications">{t("about.qualifications")}</h3>
        <IndentLine>
          <div class="tw-p-3">
            <p class="tw-mt-2">
              {t("about.qualifications.description")}
            </p>
          </div>
          <div class="tw-mt-2 tw-p-3">
            <h5>{t("about.qualifications.frontend")}</h5>
            <ul class="tw-list-disc tw-list-inside tw-mt-2">
              {
                [1, 2, 3, 4, 5, 6, 7].map((idx) => (
                  <li class="tw-list-outside tw-ml-6">
                    {t(`about.qualifications.frontend.${idx}`)}
                  </li>
                ))
              }
            </ul>
          </div>
          <div class="tw-mt-4 tw-p-3">
            <h5>{t("about.qualifications.others")}</h5>
            <ul class="tw-list-disc tw-list-inside tw-mt-2">
              {
                [1, 2, 3].map((idx) => (
                  <li class="tw-list-outside tw-ml-6">
                    {t(`about.qualifications.others.${idx}`)}
                  </li>
                ))
              }
            </ul>
          </div>
          <div class="tw-mt-4 tw-p-3">
            <h5>
              {t("about.qualifications.key_technology_keywords")}
            </h5>
            <div class="tw-flex tw-gap-2 tw-flex-wrap tw-mt-2">
              {
                [
                  "Typescript",
                  "Angular",
                  "React",
                  "Webpack",
                  "Jest",
                  "Aws",
                  "Docker",
                ].map((badge) => <TechBadge name={badge} />)
              }
            </div>
          </div>
        </IndentLine>
      </div>
      <div class="tw-flex tw-flex-col tw-mt-8">
        <h3 id="experience">
          {t("about.experience")}
        </h3>
        <IndentLine end={false} class="tw-h-full">
          <div class="tw-list-disc tw-list-inside tw-flex tw-flex-col tw-gap-4">
            {
              experience.map((exp) => (
                <div class="tw-p-3 tw-rounded-lg">
                  <div class="tw-flex tw-justify-between tw-flex-col sm:tw-flex-row">
                    <div>
                      <h3 class="tw-flex tw-flex-row tw-items-center">
                        {exp.companyName}
                        <span class="tw-text-sm tw-text-black-700 tw-ml-2">
                          based in {exp.country}
                        </span>
                      </h3>
                      <p class="tw-text-sm tw-mt-0">
                        <i class="ri-group-line" />
                        {exp.position}
                      </p>
                    </div>
                    <span class="tw-text-sm">
                      <i class="ri-calendar-line" />
                      {exp.period}
                    </span>
                  </div>
                  <div class="tw-flex tw-flex-col tw-mt-6 tw-gap-6">
                    {exp.projects.map((project) => (
                      <div class="tw-flex tw-flex-row">
                        <div class="tw-w-1/4 tw-mr-8 tw-text-right tw-break-words">
                          <h4 class="tw-break-keep">{project.title}</h4>
                          <p class="tw-text-sm">{project.period}</p>
                        </div>
                        <div class="tw-flex-1 tw-mt-0">
                          <p>{project.description}</p>
                          <ul class="tw-list-disc tw-list-inside tw-mt-2">
                            {project.goals.map((desc) => (
                              <li class="tw-list-outside tw-ml-6">{desc}</li>
                            ))}
                          </ul>
                        </div>
                      </div>
                    ))}
                  </div>
                </div>
              ))
            }
          </div>
        </IndentLine>
      </div>
      <div class="tw-flex tw-flex-col tw-mt-8">
        <h4 id="open_source">
          {t("about.open_source")}
        </h4>
        <IndentLine class="tw-flex tw-flex-col tw-gap-4">
          {
            opensourceExperience.map((exp) => (
              <div class="tw-p-3">
                <div class="tw-flex tw-justify-between tw-flex-col sm:tw-flex-row">
                  <div>
                    <h3 class="tw-break-all">{exp.projectName}</h3>
                    <p class="tw-text-sm">
                      <a
                        class="tw-text-black-950 tw-break-all"
                        href={`https://${exp.publicLink}`}
                        target="_blank"
                      >
                        <i class="ri-links-line" />
                        {exp.publicLink}
                      </a>
                    </p>
                  </div>
                  <div class="tw-inline-flex tw-flex-col tw-items-start sm:tw-items-end">
                    <span class="tw-text-sm">
                      <i class="ri-calendar-line" />
                      {exp.period}
                    </span>
                    <a class="tw-mt-2" href={langPath + exp.internalLink}>
                      {t("global.view_details")}
                    </a>
                  </div>
                </div>
                <p class="tw-mt-4">{exp.description}</p>
                <ul class="tw-list-disc tw-list-inside tw-mt-2">
                  {exp.features.map((feature) => (
                    <li class="tw-list-outside tw-ml-6">{feature}</li>
                  ))}
                </ul>
              </div>
            ))
          }
        </IndentLine>
      </div>
    </main>
    <Footer />
    <script>
      function scrollTo(id: string) {
        const element = document.getElementById(id);
        if (element) {
          element.scrollIntoView({ behavior: "smooth" });
        }
      }

      document
        .getElementById("jump_to_profile")!
        .addEventListener("click", () => scrollTo("profile"));
      document
        .getElementById("jump_to_qualifications")!
        .addEventListener("click", () => scrollTo("qualifications"));
      document
        .getElementById("jump_to_experience")!
        .addEventListener("click", () => scrollTo("experience"));
      document
        .getElementById("jump_to_open_source")!
        .addEventListener("click", () => scrollTo("open_source"));
    </script>
  </body>
</html>
