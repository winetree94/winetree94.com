---
import { getCollection } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import BlogHeader from '../components/BlogHeader.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';
import { SITE_DESCRIPTION, SITE_TITLE } from '../consts';
import { getCurrentLangCode, getLangBasePath, useTranslation } from '../i18n/utils';

const langCode = getCurrentLangCode(Astro.url);
const langPath = getLangBasePath(Astro.url);
const t = useTranslation(langCode);
const posts = (await getCollection('projects'))
  .filter((post) => post.slug.startsWith(langCode))
  .filter((post) => (import.meta.env.DEV ? true : !post.data.hidden))
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
---

<!doctype html>
<html lang={langCode}>
  <head>
  <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
  </head>
  <body>
    <BlogHeader />
    <main>
      <div class="tw-flex tw-flex-col">
        <div
          class="tw-p-8 tw-flex tw-flex-col tw-justify-center tw-items-center tw-mb-8"
        >
          <h4 class="tw-text-center">{t("projects.title")}</h4>
          <p class="tw-mt-4 tw-text-center">
            {t("projects.description")}
          </p>
        </div>
        {
          posts.length ? (
            <ul class="tw-flex tw-flex-wrap tw-gap-2 sm:tw-gap-8 tw-list-none">
              {posts.map((post) => (
                <li class="tw-w-full sm:tw-w-[calc(50%-1rem)]">
                  <a
                    class="tw-flex tw-flex-col tw-text-black-950"
                    href={`${langPath}/projects/${post.slug.slice(3)}/`}
                  >
                    <img
                      class="tw-rounded-xl tw-aspect-video tw-object-cover"
                      width={720}
                      height={360}
                      src={post.data.heroImage}
                      alt=""
                    />
                    <h6 class="title tw-mt-4">{post.data.title}</h6>
                    <p class="date">
                      <FormattedDate date={post.data.pubDate} />
                    </p>
                  </a>
               </li>
              ))}
            </ul>
          ) : (
            <div class="tw-flex tw-justify-center">
              <p>{t("global.empty")}</p>
            </div>
          )
        }
      </div>
    </main>
    <Footer />
  </body>
</html>
